const { Connection, Keypair, PublicKey } = require('@solana/web3.js');
const { Metaplex, keypairIdentity, bundlrStorage } = require('@metaplex-foundation/js');
const fs = require('fs');

async function deploy() {
    console.log('üöÄ Starting NFT deployment...');
    
    // –ó–∞–≥—Ä—É–∑–∏ –∫–æ—à–µ–ª–µ–∫
    const walletData = JSON.parse(fs.readFileSync('devnet-wallet.json', 'utf8'));
    const wallet = Keypair.fromSecretKey(Uint8Array.from(walletData));
    
    console.log('üëõ Wallet:', wallet.publicKey.toString());
    
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ devnet
    const connection = new Connection('https://api.devnet.solana.com');
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Metaplex
    const metaplex = Metaplex.make(connection)
        .use(keypairIdentity(wallet));
    
    console.log('üç¨ Creating NFT Collection...');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const { nft: collectionNft } = await metaplex.nfts().create({
        name: 'Solana Tamagotchi',
        symbol: 'TAMA',
        uri: 'https://example.com/collection.json', // –í—Ä–µ–º–µ–Ω–Ω—ã–π URI
        sellerFeeBasisPoints: 500, // 5% —Ä–æ—è–ª—Ç–∏
        isCollection: true,
    });
    
    console.log('‚úÖ Collection created!');
    console.log('üìç Collection Address:', collectionNft.address.toString());
    
    // –°–æ—Ö—Ä–∞–Ω–∏ –∫–æ–Ω—Ñ–∏–≥
    const config = {
        network: 'devnet',
        collection: {
            address: collectionNft.address.toString(),
            name: 'Solana Tamagotchi',
            symbol: 'TAMA',
        },
        candyMachine: {
            address: 'PLACEHOLDER', // –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø–æ–∑–∂–µ
        },
        treasury: wallet.publicKey.toString(),
        createdAt: new Date().toISOString(),
    };
    
    fs.writeFileSync('candy-machine-config.json', JSON.stringify(config, null, 2));
    console.log('üíæ Config saved to candy-machine-config.json');
    
    console.log('üéâ Collection ready!');
    console.log('Next: Upload metadata and create Candy Machine');
}

deploy().catch(console.error);
